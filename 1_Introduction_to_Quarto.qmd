---
title: "Introduction to Quarto"
author: 
 name: "Matt Steele"
 affiliation: "West Virginia University"
format: html
editor: visual
---

# Additional Resources

-   [Quarto Guide](https://quarto.org/docs/guide/)
-   [Quarto RStudio Guide](https://quarto.org/docs/tools/rstudio.html)

------------------------------------------------------------------------

# About Quarto

Quarto is an open-sources and technical publishing system that allows for literate coding that combine markdown synatax and coding.

-   You can blend narrative text and code to output documents, web pages, books, presentations and more.

### Why Bother?

1.  Encourages you to document your analysis
2.  Provides a non-proprietary format that you can easily store, preserve, document with metadata, and retrieve at later dates.
3.  Reproducibility means that you can share the document with colleagues and peers to check errors or to collaborate easily. R Markdown even allows for multiple coding languages to be used in a single document.
4.  Create reports/documents that are dynamically generated from you data and can be easily revised. R Markdown documents are dynamic and an errors or issues with the coding can be made with little work on the user's end.

-   No longer do you need to re-code and re-paste

------------------------------------------------------------------------

# YAML Header

      - YAML AIN'T MARKUP LANGUAGE

This is the metadata area for your document and it also determines how the document is rendered when you knit it.
It's default fields are **title**, **author**, **date**, and **output**.
But you can add more fields.

[Available fields for YAML](https://cran.r-project.org/web/packages/ymlthis/vignettes/yaml-fieldguide.html)

About YAML:

-   White spaces matter: indents indicate the contents are *child* of the level above
    -   Spaces not tabs
-   Boolean operators: true/false is lowercase
-   true/false \~ yes/no
-   Entries can include executable code
    -   "`r Sys.Date()`"
-   Most common outputs are *html_document*, *pdf_document*, and *word_document*
    -   [HTML](https://quarto.org/docs/reference/formats/html.html)
    -   [PDF](https://quarto.org/docs/reference/formats/pdf.html)
    -   [WORD](https://quarto.org/docs/reference/formats/docx.html)

------------------------------------------------------------------------

# Formating Options

The following will provide ways for you to format your text/prose within the document that you are editing

# Header 1

## Header 2

### Header 3

#### Header 4

##### Header 5

###### Header 6

Italics - *I am italic - mama mia*

Bold - **I am bold**

Hyperlink - You can learn more about [Quarto here](https://quarto.org/)

Tables

|      | Var1 | Var2 |
|------|------|------|
| obs1 | 1    | low  |
| obs2 | 2    | low  |
| obs3 | 3    | high |

Image - ![Drake on Markdown](drake_down.jpg)

Footnotes -

Here is a footnote reference,[^1] and another.

[^1]: Here is the footnote.

Subscript~2~ - Superscript^2^

Block quote

> "You miss 100% of the shots you do not take. - Wayne Gretsky" - Michael Scott

Unordered lists:

-   apple
-   pear
-   orange
-   bear
    -   orange bear
    -   apple pear

Ordered lists:

1.  Apple
2.  Pear
3.  Orange Bear

------------------------------------------------------------------------

# Document Editors

You can change the way that you edit the document by using the **Source** or **Visual** tab on the editor toolbar.

### Source

-   Allows you view the document in code view

### Visual

-   Allows you to view the document with markups
-   Allows basic WSYWIG

------------------------------------------------------------------------

# Code Chunks

Code chunks allow you to include code from multiple languages into your narration.

You can insert a chunk code by:

-   CTRL + ALT + I (PC)

-   COMMAND + OPTIONS + I (MAC)

-   Use **Add Chunk** command in editor toolbar

**Let's add a code chunk that allows us to see the data set mtcars**

```{r}

```

#### Running a Code Chunk

You can run a code chunk by:

-   CTRL + SHIFT + ENTER (PC)
-   COMMAND + SHIFT + ENTER (MAC)
-   Run button in Code Chunk
-   Run button in editor toolbar

------------------------------------------------------------------------

## Customize Chunk Code

### Chunk Cog Wheel

-   Allows you to rename the chunk so it can be easily located
-   Allows you to set message and warning displays
-   Allows you to adjust plot sizes

**Let's rename our code chunk above**

#### Include

Include allows you to include or not include the chunk code in the final product when knitted.

> include =

**Let's create a chunk code that sets our current working directory but does not display the code or output in our final product using include. Hint: Set the working directory with the command - setwd()**

```{r}

```

#### Eval

Eval tells RStudio to either run or not run a code chunk when the document is knitted

> eval =

**Let's install the CRAN package Tidyverse. But since this is a one time operation, let's preface that this code is not run when the document is knitted. Hint: You can also use multiple output commands but you will need to separate them with a *comma (,)*.**

```{r}

```

#### Message

Some commands, like loading a package, will display messages after the code is run.
You can choose whether or not you want the message to be displayed in the knitted documents

> message =

**Let's load the tidyverse package because we will need functions in it to run future code in the report. However, let's set it so the load message does not appear when the document is knitted but the code is displayed so a person who we are collaborating with can see that we are using that package.**

```{r}

```

#### Echo

Echo allows you to show the output of the code that has been run, but not to show the code chunk when the document is knitted

> echo =

**Let's get the results of a line of code without displaying the code in the report.**

```{r}

```

------------------------------------------------------------------------

# Inline Code

You can include coding within the body of your work using inline code using the backtick (\`) button on your keyboard

**Let's include inline code with the mean of the mpg variable in the mtcars dataset as well as the number of observations of the variable.**

The average miles per gallon from the cars dataset is `r mean(mtcars$mpg)` based on `r nrow(mtcars)` observations.

------------------------------------------------------------------------

# Plots

In addition to adding code and outputs of the code, you can also set up data visualization to be displayed in your documents.

Here we will add a histogram of the dataset for the variable mpg.
And we will use R Markdown to determine the size of the figure as well as give it a captions.
Additionally, as we have learned already, we will use echo=FALSE to display only the output and not the code.

```{r echo=FALSE, message=FALSE, fig.align='center', fig.width=10, fig.cap="Figure 6.2: MPG Distribution"}

library(tidyverse)
mtcars.hist <- ggplot(mtcars, aes(x=mpg))
mtcars.hist + 
  geom_histogram(bins = 5, color = "yellow", fill = "skyblue") + 
    labs(x = "Miles Per Gallon",
       y = NULL) +
  theme_classic()

```

------------------------------------------------------------------------

# Citations

Quarto allows you to insert citations as well as work with citation managers such as [Zotero](https://databases.lib.wvu.edu/connect/1498075110) and [CiteDrive](https://www.citedrive.com/).

Once a citation is added to the document, it will automatically populate in a bibliography at the end of the document.

Insert Citations into your document:

-   Visual Mode: Insert \> Citation
-   Visual/Source Mode: Use \@ or \[\@ ... \] or (\@)

When a Citation is generated:

-   A new .bib file will be created in the current working directory and will be attached to the document in the YAML header

-   The default format for the citations is **Chicago Turabian**.
    If you want to change the format you will need to download the proper .csl file and add it to your working directory and add a csl field to your YAML header

    -   [Zotero Library](https://www.zotero.org/styles)

    -   [Citation Visual Editor](https://editor.citationstyles.org/about/)

**Let's add APA 7th Ed. Citation Format to our Working Directory and YAML header**

**Let's try and find and enter the citation for the [following article](https://pubmed.ncbi.nlm.nih.gov/34303462/)**

-   10.1016/j.jvs.2021.03.055

------------------------------------------------------------------------
